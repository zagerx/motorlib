/* 必须有根节点 /，然后把要修改/新增的内容写在里面 */
/ {
	/* 统一把 motors 放在根节点下，避免散落在各处 */
	motors {
		motor0: motor_0 {
			compatible = "motor-bldc";
			feedback = <&tle5012b0>;
			currsmp  = <&currsmp0>;
			pwm      = <&pwm1>;
			status   = "okay";
		};
	};
};

/* 以下全部是“追加/覆盖”已存在的外设节点，用 &label {} 语法 */
&timers1 {
	pwm1: pwm {
		compatible = "st,stm32-pwm-custom";
		pinctrl-0 = <&tim1_ch1_pe9  &tim1_ch1n_pe8
			     &tim1_ch2_pe11 &tim1_ch2n_pe10
			     &tim1_ch3_pe13 &tim1_ch3n_pe12>;
		pinctrl-names = "default";
		timing-params = <120 13750 0>;
		slave = <0>;
		status = "okay";
	};
};

&spi1 {
	status = "okay";                       
	pinctrl-0 = <&spi1_sck_pc10          
		     &spi1_miso_pc11
		     &spi1_mosi_pc12>;
	pinctrl-names = "default";
	cs-gpios = <&gpioa 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;

	tle5012b0: tle5012b@0 {
		compatible = "infineon,tle5012b";
		reg = <0>;
		status = "okay";
		spi-max-frequency = <8000000>; /* 1MHZ */
	};
};

&adc1 {
	currsmp0: currsmp {
		compatible = "st,stm32-currsmp-shunt";
		pinctrl-0 = <&adc1_inp15_pa3 &adc1_inp4_pc4
			     &adc1_inp16_pa0 &adc1_inp17_pa1
			     &adc1_inp14_pa2>;
		pinctrl-names = "default";
		adc-channels = <15 4 16 17 14>;
		adc-slave = <0>;
		status = "okay";
	};
};
