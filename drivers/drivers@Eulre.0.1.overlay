/* 必须有根节点 /，然后把要修改/新增的内容写在里面 */
/ {
	/* 统一把 motors 放在根节点下，避免散落在各处 */
	motors {
		motor0: motor_0 {
			compatible = "motor-bldc";
			feedback = <&as50470>;
			currsmp  = <&currsmp0>;
			pwm      = <&pwm1>;
			status   = "okay";
		};
	};
};

/* 以下全部是“追加/覆盖”已存在的外设节点，用 &label {} 语法 */
&timers1 {
	pwm1: pwm {
		compatible = "st,stm32-pwm-custom";
		pinctrl-0 = <&tim1_ch1_pa8  &tim1_ch1n_pb13
			     &tim1_ch2_pa9  &tim1_ch2n_pb14
			     &tim1_ch3_pa10 &tim1_ch3n_pb15>;
		pinctrl-names = "default";
		timing-params = <120 13750 0>;
		slave = <0>;
		status = "okay";
	};
};

&spi1 {
	status = "okay";                       
	pinctrl-0 = <&spi1_sck_pb3          
		     &spi1_miso_pb4
		     &spi1_mosi_pb5>;
	pinctrl-names = "default";
	cs-gpios = <&gpioa 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;

	as50470: as5047p@0 {
		compatible = "ams,as5047";
		reg = <0>;
		status = "okay";
		spi-max-frequency = <8000000>; /* 1MHZ */
	};
};

&adc1 {
	currsmp0: currsmp {
		compatible = "st,stm32-currsmp-shunt";
		pinctrl-0 = <&adc1_in3_pa2 &adc1_in12_pb1
			     &adc1_in11_pb12 &adc2_in3_pa6>;
		pinctrl-names = "default";
		adc-channels = <3 12 11 3>;
		adc-slave = <0>;
		status = "okay";
	};
};
